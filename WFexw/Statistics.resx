<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAANcNAADXDQAAAAAAAAAA
        AAAAAADxAAAA+wAAAPkAAAD5AAAA+QAAAPkAAAD5AAAA+QAAAPkAAAD5AAAA+QAAAPkAAAD5AAAA+QAA
        APkAAAD5AAAA+QAAAPkAAAD5AAAA+QAAAPkAAAD5AAAA+QAAAPkAAAD5AAAA+QAAAPkAAAD5AAAA+QAA
        APkAAAD7AAAA8QAAAPoAAACAAAAARgAAAEcAAABHAAAARwAAAEcAAABHAAAARwAAAEcAAABHAAAARwAA
        AEcAAABHAAAARwAAAEcAAABHAAAARwAAAEcAAABHAAAARwAAAEcAAABHAAAARwAAAEcAAABHAAAARwAA
        AEcAAABHAAAARgAAAIAAAAD6AAAA+QAAAEkAAAAqAAAAegAAAH8AAAB/AAAAfwAAAH8AAAB/AAAAfwAA
        AH8AAAB8AAAAfgAAAH8AAAB/AAAAfwAAAH8AAAB/AAAAfwAAAH4AAAB8AAAAfwAAAH8AAAB/AAAAfwAA
        AH8AAAB/AAAAfwAAAHoAAAAqAAAASQAAAPkAAAD5AAAARwAAAHoAAADuAAAAuwAAALkAAAC5AAAAuQAA
        ALkAAAC5AAAAvwAAAPMAAADTAAAAuAAAALkAAAC5AAAAuQAAALkAAAC4AAAA0wAAAPMAAAC/AAAAuQAA
        ALkAAAC5AAAAuQAAALkAAAC7AAAA7gAAAHoAAABHAAAA+QAAAPkAAABHAAAAfwAAALsAAAAMAAAABgAA
        AAYAAAAGAAAABgAAAAUAAAAaAAAA1AAAAGEAAAACAAAABgAAAAYAAAAGAAAABgAAAAIAAABhAAAA1AAA
        ABoAAAAFAAAABgAAAAYAAAAGAAAABgAAAAwAAAC7AAAAfwAAAEcAAAD5AAAA+QAAAEcAAACAAAAAuQAA
        AAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABUAAADTAAAAXQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AF0AAADTAAAAFQAAAAAAAAAkAAAAbwAAAAYAAAAAAAAABgAAALkAAAB/AAAARwAAAPkAAAD5AAAARwAA
        AIAAAAC5AAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFQAAANMAAABdAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAXQAAANMAAAAVAAAAAAAAABMAAACtAAAAQQAAAAAAAAAGAAAAuQAAAH8AAABHAAAA+QAA
        APkAAABHAAAAgAAAALkAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVAAAA0wAAAF0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABdAAAA0wAAABUAAAAAAAAACwAAAFIAAACXAAAABwAAAAUAAAC5AAAAfwAA
        AEcAAAD5AAAA+QAAAEcAAACAAAAAuQAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABUAAADTAAAAXQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF0AAADTAAAAFAAAAAAAAACJAAAAiwAAAMEAAAAmAAAAAwAA
        ALkAAAB/AAAARwAAAPkAAAD5AAAARwAAAIAAAAC5AAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFQAA
        ANMAAABdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXQAAANMAAAAVAAAAAAAAAEQAAABuAAAAXwAA
        AA8AAAAFAAAAuQAAAH8AAABHAAAA+QAAAPkAAABHAAAAfwAAAL8AAAAaAAAAFQAAABUAAAAVAAAAFQAA
        ABQAAAAoAAAA1gAAAGsAAAARAAAAFQAAABUAAAAVAAAAFQAAABEAAABrAAAA1gAAACgAAAAUAAAAEgAA
        ABAAAAAQAAAAFAAAABoAAAC/AAAAfwAAAEcAAAD5AAAA+QAAAEcAAAB8AAAA9gAAANQAAADTAAAA0wAA
        ANMAAADTAAAA0wAAANcAAAD3AAAA4wAAANIAAADTAAAA0wAAANMAAADTAAAA0gAAAOMAAAD3AAAA1wAA
        ANMAAADTAAAA0wAAANMAAADTAAAA1AAAAPYAAAB8AAAARwAAAPkAAAD5AAAARwAAAH4AAADUAAAAYQAA
        AF0AAABdAAAAXQAAAF0AAABcAAAAagAAAOMAAACYAAAAWgAAAF0AAABcAAAAXAAAAF0AAABaAAAAmAAA
        AOMAAABqAAAAXAAAAF0AAABdAAAAXQAAAF0AAABhAAAA1AAAAH4AAABHAAAA+QAAAPkAAABHAAAAgAAA
        ALkAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAA0gAAAF0AAAAAAAAAAQAAABcAAAAWAAAAAQAA
        AAAAAABdAAAA0gAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAC5AAAAfwAAAEcAAAD5AAAA+QAA
        AEcAAACAAAAAuQAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABUAAADTAAAAXQAAAAAAAAA7AAAArgAA
        ALAAAAA1AAAAAAAAAF0AAADTAAAAFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAALkAAAB/AAAARwAA
        APkAAAD5AAAARwAAAIAAAAC5AAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFQAAANMAAABdAAAAAAAA
        AC8AAABfAAAApwAAAFgAAAAAAAAAXQAAANMAAAAVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAuQAA
        AH8AAABHAAAA+QAAAPkAAABHAAAAgAAAALkAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVAAAA0wAA
        AF0AAAAAAAAANQAAALcAAAB0AAAAFQAAAAAAAABdAAAA0wAAABUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAYAAAC5AAAAfwAAAEcAAAD5AAAA+QAAAEcAAACAAAAAuQAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABUAAADTAAAAXQAAAAAAAAAqAAAAuQAAAIYAAAAaAAAAAAAAAF0AAADTAAAAFQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABgAAALkAAAB/AAAARwAAAPkAAAD5AAAARwAAAIAAAAC5AAAABgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAFAAAANIAAABdAAAAAAAAAAUAAAAnAAAAKwAAAAgAAAAAAAAAXQAAANIAAAAUAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAGAAAAuQAAAH8AAABHAAAA+QAAAPkAAABHAAAAfgAAANQAAABhAAAAXQAA
        AF0AAABdAAAAXQAAAFwAAABqAAAA4wAAAJgAAABaAAAAXQAAAFoAAABaAAAAXQAAAFoAAACYAAAA4wAA
        AGoAAABcAAAAXQAAAF0AAABdAAAAXQAAAGEAAADUAAAAfgAAAEcAAAD5AAAA+QAAAEcAAAB8AAAA9gAA
        ANQAAADTAAAA0wAAANMAAADTAAAA0wAAANcAAAD3AAAA4wAAANIAAADTAAAA0wAAANMAAADTAAAA0gAA
        AOMAAAD3AAAA1wAAANMAAADTAAAA0wAAANMAAADTAAAA1AAAAPYAAAB8AAAARwAAAPkAAAD5AAAARwAA
        AH8AAAC/AAAAGgAAABUAAAAVAAAAEgAAABQAAAAUAAAAKAAAANYAAABrAAAAEQAAABUAAAAVAAAAFQAA
        ABUAAAARAAAAawAAANYAAAAoAAAAFAAAABUAAAAVAAAAFQAAABUAAAAaAAAAvwAAAH8AAABHAAAA+QAA
        APkAAABHAAAAgAAAALkAAAAGAAAAAAAAAAcAAABPAAAAEAAAAAAAAAAVAAAA0wAAAF0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABdAAAA0wAAABUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAC5AAAAfwAA
        AEcAAAD5AAAA+QAAAEcAAACAAAAAuQAAAAYAAAAAAAAAEQAAAK4AAAAlAAAAAAAAABUAAADTAAAAXQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF0AAADTAAAAFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAA
        ALkAAAB/AAAARwAAAPkAAAD5AAAARwAAAIAAAAC5AAAABgAAAAAAAAARAAAArgAAACUAAAAAAAAAFQAA
        ANMAAABdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXQAAANMAAAAVAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAGAAAAuQAAAH8AAABHAAAA+QAAAPkAAABHAAAAgAAAALkAAAAGAAAAAAAAADgAAADGAAAAIwAA
        AAAAAAAVAAAA0wAAAF0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABdAAAA0wAAABUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAYAAAC5AAAAfwAAAEcAAAD5AAAA+QAAAEcAAACAAAAAuQAAAAYAAAAAAAAAHwAA
        AG0AAAASAAAAAAAAABUAAADTAAAAXQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF0AAADTAAAAFQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAALkAAAB/AAAARwAAAPkAAAD5AAAARwAAAH8AAAC7AAAADAAA
        AAYAAAAEAAAAAwAAAAYAAAAFAAAAGgAAANQAAABhAAAAAgAAAAYAAAAGAAAABgAAAAYAAAACAAAAYQAA
        ANQAAAAaAAAABQAAAAYAAAAGAAAABgAAAAYAAAAMAAAAuwAAAH8AAABHAAAA+QAAAPkAAABHAAAAegAA
        AO4AAAC7AAAAuQAAALkAAAC5AAAAuQAAALkAAAC/AAAA8wAAANMAAAC4AAAAuQAAALkAAAC5AAAAuQAA
        ALgAAADTAAAA8wAAAL8AAAC5AAAAuQAAALkAAAC5AAAAuQAAALsAAADuAAAAegAAAEcAAAD5AAAA+QAA
        AEkAAAAqAAAAewAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAAB8AAAAfgAAAIAAAACAAAAAgAAA
        AIAAAACAAAAAgAAAAH4AAAB8AAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAHsAAAAqAAAASQAA
        APkAAAD6AAAAgAAAAEYAAABHAAAARwAAAEcAAABHAAAARwAAAEcAAABHAAAARwAAAEcAAABHAAAARwAA
        AEcAAABHAAAARwAAAEcAAABHAAAARwAAAEcAAABHAAAARwAAAEcAAABHAAAARwAAAEcAAABHAAAARwAA
        AEYAAACAAAAA+gAAAPEAAAD7AAAA+QAAAPkAAAD5AAAA+QAAAPkAAAD5AAAA+QAAAPkAAAD5AAAA+QAA
        APkAAAD5AAAA+QAAAPkAAAD5AAAA+QAAAPkAAAD5AAAA+QAAAPkAAAD5AAAA+QAAAPkAAAD5AAAA+QAA
        APkAAAD5AAAA+QAAAPsAAADxAAAAAAAAAAAAAAAAAAAAAAAAAAAHx+IgB8fiIAfH4gAHx+IAB8fiAAAA
        AAAAAAAAAAAAAAfEI+AHxCPgB8Qj4AfEI+AHxCPgB8Qj4AAAAAAAAAAAAAAAAARH4+AER+PgBEfj4ARH
        4+AER+PgAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>